
CC = gcc
CXX = g++
LD = g++
WINDRES = windres 
RM = del


CPPFLAGS = $(XCPPFLAGS) -DENABLE_BINRELOC -D_WIN32 -D__cplusplus  -D_REENTRANT $(INCLUDES) 
LDFLAGS = -mwindows -lwsock32 -lws2_32 -lgdi32  -lmingw32 -lkernel32

CPPFLAGS += -fpermissive 

ifeq (DEBUG, 1)
	CPPFLAGS += -g
	LDFLAGS += -g 
endif


INCLUDES = -Icore -Icore\common 

TARGET = peercast.exe
CORE = core
SRCHTML = ui\html
HTML = html

CORESOURCE = $(CORE)\win32\wsys.cpp \
	 $(CORE)\win32\wsocket.cpp \
	 $(CORE)\common\socket.cpp \
	 $(CORE)\common\servent.cpp \
	 $(CORE)\common\servhs.cpp \
	 $(CORE)\common\servmgr.cpp \
	 $(CORE)\common\xml.cpp \
	 $(CORE)\common\stream.cpp \
	 $(CORE)\common\sys.cpp \
	 $(CORE)\common\gnutella.cpp \
	 $(CORE)\common\html.cpp \
	 $(CORE)\common\channel.cpp \
	 $(CORE)\common\http.cpp \
	 $(CORE)\common\inifile.cpp \
	 $(CORE)\common\peercast.cpp \
	 $(CORE)\common\stats.cpp \
	 $(CORE)\common\mms.cpp \
	 $(CORE)\common\mp3.cpp \
	 $(CORE)\common\nsv.cpp \
	 $(CORE)\common\ogg.cpp \
	 $(CORE)\common\url.cpp \
	 $(CORE)\common\icy.cpp \
	 $(CORE)\common\pcp.cpp \
	 $(CORE)\common\jis.cpp 
COREOBJ = $(CORESOURCE:.cpp=.o)

ENCODESOURCE = \
	 $(CORE)\common\utf8.c \
 	 $(CORE)\common\identify_encoding.c

ENCODEOBJ = $(ENCODESOURCE:.c=.o)

RESOURCE = ui\win32\Simple_vp\Simple.o
 

WINSOURCE = ui\win32\Simple_vp\gui_vp.cpp ui\win32\Simple_vp\Simple_vp.cpp 
WINOBJ = $(WINSOURCE:.cpp=.o)

# Here follow the generic build rules.
all:  $(TARGET)
	

clean:
	$(RM) $(WINOBJ) $(COREOBJ) $(ENCODEOBJ) $(TARGET) ${LIBOBJSTATIC} ${LIBOBJSHARED} 

%.o: %.cpp
	$(CXX) $(INCLUDES) $(CPPFLAGS) -c $< -o $@

%.o: %.c
	$(CXX) $(INCLUDES) $(CPPFLAGS) -c $< -o $@

%.o: %.rc
	$(WINDRES) $< $@
	

$(TARGET): $(COREOBJ) $(WINOBJ) $(ENCODEOBJ) $(RESOURCE)
	$(LD) -o $@ $(WINOBJ) $(COREOBJ) $(ENCODEOBJ) $(RESOURCE) $(LIBS) $(LDFLAGS) 
	

