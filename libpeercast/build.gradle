plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'org.jetbrains.dokka'
    id 'kotlinx-serialization'
    id 'maven-publish'
}

android {
    compileSdkVersion target_sdk_version

    defaultConfig {
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version

        buildConfigField("String", "LIB_VERSION", "\"4.0\"")
        buildConfigField("int", "LIB_VERSION_CODE", "4_00_00_00")

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        consumerProguardFiles 'proguard-rules.pro'
    }
}

dokka {
    outputFormat = 'html'
    sourceDirs = files('src/main/java')
    outputDirectory = "$buildDir/javadoc"
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinx_coroutines_version"

    implementation "org.jetbrains.kotlinx:kotlinx-serialization-core:$serialization_version"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$serialization_version"

    implementation "io.ktor:ktor-client-android:$ktor_client_version"
    //implementation "io.ktor:ktor-client-serialization:$ktor_client_version"
    implementation "io.ktor:ktor-client-logging-jvm:$ktor_client_version"

    implementation "androidx.work:work-runtime:$work_version"
    implementation "androidx.work:work-runtime-ktx:$work_version"

    //api "com.squareup.okhttp3:okhttp:$okhttp_version"
    //api "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

repositories {
    mavenCentral()
    google()
}

afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                from components.release
                groupId = 'com.github.jitpack'
                artifactId = 'libpeercast'
                version = '4.0'
            }
        }
    }
}
